{"version":3,"sources":["webpack:///src/app/pages/session-assignment-view/session-assignment-view.page.html","webpack:///src/app/pages/session-assignment-view/session-assignment-view-routing.module.ts","webpack:///src/app/pages/session-assignment-view/session-assignment-view.module.ts","webpack:///src/app/pages/session-assignment-view/session-assignment-view.page.scss","webpack:///src/app/pages/session-assignment-view/session-assignment-view.page.ts"],"names":["routes","path","component","SessionAssignmentViewPageRoutingModule","imports","forChild","exports","SessionAssignmentViewPageModule","declarations","SessionAssignmentViewPage","ngZone","nativeHttp","globalService","platform","sessionmypage","dms","router","activatedRoute","modalController","assignmentsService","storage","networkService","refreshvalue","segmentModel","console","log","isactiveassignment","token","getselectedtoken","studentid","getselectedStudentId","getAssignmentList","tutornamefordisplay","getselectedtutorname","backButton","subscribeWithPriority","navigateByUrl","sessionid","sessionstatusended","SESSION_STATUS_ENDED","paramMap","subscribe","params","id","getAll","asgmtid","sessionstatus","getselectedsessionstatus","get","then","val","forEach","valor","asgmt_Id","asgmtlist","imgdisplayinapp","display","asgmt_Data","asgmtdiscusslist","assignmentDiscussions","event","header","fetchinfo","setDataSerializer","post","apiUrl","response","data","JSON","parse","set","test","assignments","valor2","test2","test3","created_On","target","complete","e","error","presentError","setTimeout","status","isactivevideoorvoice","isactiveanalysis","ev","create","cssClass","backdropDismiss","popover","present","online","presentNetworkMsg","presentDrawing","res","setselectedasgmtid","presentModal","bImg","bypassSecurityTrustResourceUrl","componentProps","imagedisplay","discussimgdisplayinapp","asgmtDiscuss_Data","modal","selector","template"],"mappings":"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","file":"pages-session-assignment-view-session-assignment-view-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <app-session-header></app-session-header>\\r\\n  <ion-segment [(ngModel)]=\\\"segmentModel\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\r\\n    <ion-segment-button class=\\\"{{isactivevideoorvoice}}\\\" value=\\\"conferencing\\\">\\r\\n      <ion-label>Conferencing</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button class=\\\"{{isactiveassignment}}\\\" value=\\\"assignment\\\">\\r\\n      <ion-label>Assignment</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <!-- Analysis segment only shows on teacher views. Not coded yet. -->\\r\\n    <ion-segment-button class=\\\"{{isactiveanalysis}}\\\" value=\\\"analysis\\\">\\r\\n      <ion-label>Analysis</ion-label>\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot='fixed' (ionRefresh)='UpdateData($event)'>\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <div *ngIf=\\\"segmentModel === 'conferencing'\\\">\\r\\n    <ion-col>\\r\\n      <div style=\\\"text-align: center;\\\">No Conference Call</div>\\r\\n    </ion-col>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"segmentModel === 'assignment'\\\">\\r\\n    <div class=\\\"thirdcontent\\\">\\r\\n\\r\\n      <div class=\\\"box\\\" *ngIf=\\\"asgmtlist&&this.sessionstatus!==this.sessionstatusended\\\">\\r\\n        <ion-label>\\r\\n          [{{asgmtlist.created_By_Username}}-{{asgmtlist.created_By_Level}}] {{asgmtlist.asgmt_Title}}\\r\\n        </ion-label>\\r\\n        <ion-icon style=\\\"position: absolute;right:1em;zoom:1.3\\\" button src=\\\"assets/images/1001-cross.svg\\\"\\r\\n          (click)=\\\"PreviousPage()\\\"></ion-icon>\\r\\n        <br />\\r\\n      </div>\\r\\n      <div class=\\\"boxSessionEnd\\\" *ngIf=\\\"asgmtlist&&this.sessionstatus===this.sessionstatusended\\\">\\r\\n        <ion-label>\\r\\n          [{{asgmtlist.created_By_Username}}-{{asgmtlist.created_By_Level}}] {{asgmtlist.asgmt_Title}}\\r\\n        </ion-label>\\r\\n        <ion-icon style=\\\"position: absolute;right:1em;zoom:1.3\\\" button src=\\\"assets/images/1001-cross.svg\\\"\\r\\n          (click)=\\\"PreviousPage()\\\"></ion-icon>\\r\\n        <br />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"center\\\">\\r\\n        <ion-card *ngIf=\\\"asgmtlist\\\">\\r\\n          <b style=\\\"font-size: x-large;color:black\\\">Question</b>\\r\\n          <ion-item>\\r\\n            <ion-img *ngIf=\\\"asgmtlist.asgmt_Data==null\\\" ionImgViewer style=\\\"width:10em;height:10em;\\\"\\r\\n              src=\\\"assets/images/noimage.png\\\"></ion-img>\\r\\n            <img (click)=\\\"presentModalImage(imgdisplayinapp)\\\" *ngIf=\\\"asgmtlist.asgmt_Data!=null\\\"\\r\\n              style=\\\"width:10em;height:10em;\\\" [src]=\\\"imgdisplayinapp\\\">\\r\\n            <ion-button *ngIf=\\\"asgmtlist.created_By===this.studentid&&this.sessionstatus!==this.sessionstatusended\\\"\\r\\n              slot=\\\"end\\\" style=\\\"font-size: larger;color:white;\\\" (click)=\\\"EditDrawing()\\\">Edit</ion-button>\\r\\n          </ion-item>\\r\\n          <ion-card-content style=\\\"font-size: large;color:black;padding: 0em;\\\">\\r\\n            {{asgmtlist.asgmt_Value}}\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n        <ion-card>\\r\\n          <b style=\\\"font-size: x-large;color:black\\\">Discussion</b>\\r\\n          <div class=\\\"scrolling-wrapper\\\">\\r\\n            <div *ngFor=\\\"let asgmtlist of asgmtdiscusslist\\\" class=\\\"card\\\">\\r\\n              <h2>\\r\\n                <ion-label style=\\\"font-size: medium;\\\">{{asgmtlist.created_On | date:'medium'}}</ion-label><br />\\r\\n                <img style=\\\"width:10em;height:10em\\\" (click)=\\\"presentModalDiscussImage(asgmtlist.asgmtDiscuss_Data)\\\"\\r\\n                  *ngIf=\\\"asgmtlist.asgmtDiscuss_Data!=null\\\" [src]=\\\"this.display(asgmtlist.asgmtDiscuss_Data)\\\"><br />\\r\\n                <ion-label style=\\\"font-size: medium;\\\" *ngIf=\\\"asgmtlist.created_By_Username!=null\\\">Commented By:\\r\\n                  <b>{{asgmtlist.created_By_Username}} ({{asgmtlist.created_By_Level}})</b></ion-label><br />\\r\\n                <ion-label style=\\\"font-size: medium;\\\" *ngIf=\\\"asgmtlist.created_By_Username==null\\\">Commented By:\\r\\n                  <b>{{tutornamefordisplay}}</b></ion-label><br />\\r\\n              </h2>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ion-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- </div> -->\\r\\n  </div>\\r\\n  <div *ngIf=\\\"segmentModel === 'analysis'\\\">\\r\\n    <ion-col>\\r\\n      <div style=\\\"text-align: center;\\\">Analysis Tab</div>\\r\\n    </ion-col>\\r\\n  </div>\\r\\n</ion-content>\\r\\n<ion-footer>\\r\\n  <ion-fab-button *ngIf=\\\"segmentModel === 'assignment'&&asgmtlist\\\" (click)=\\\"StayonPage(asgmtlist.asgmt_Id)\\\"\\r\\n    vertical=\\\"end\\\" horizontal=\\\"end\\\" style=\\\"position: absolute;bottom: 1em;right: 1em;\\\"><img\\r\\n      style=\\\"width:3em;height:3em;\\\" src=\\\"assets/images/chat-1.svg\\\"></ion-fab-button>\\r\\n</ion-footer>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SessionAssignmentViewPage } from './session-assignment-view.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SessionAssignmentViewPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SessionAssignmentViewPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SessionAssignmentViewPageRoutingModule } from './session-assignment-view-routing.module';\r\nimport { SessionAssignmentViewPage } from './session-assignment-view.page';\r\nimport {ComponentsModule} from '../../components.module';\r\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SessionAssignmentViewPageRoutingModule,\r\n    NgxIonicImageViewerModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [SessionAssignmentViewPage]\r\n})\r\nexport class SessionAssignmentViewPageModule {}\r\n","export default \".center {\\n  text-align: center;\\n}\\n\\n.scrolling-wrapper {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap;\\n}\\n\\n.scrolling-wrapper .card {\\n  display: inline-block;\\n}\\n\\nion-item {\\n  border: none;\\n  padding: 0em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2Vzc2lvbi1hc3NpZ25tZW50LXZpZXcvQzpcXFVzZXJzXFxMMzA5MDNcXERvY3VtZW50c1xcR2l0SHViXFxJb25pY0ZQQW5hbHlzaXMvc3JjXFxhcHBcXHBhZ2VzXFxzZXNzaW9uLWFzc2lnbm1lbnQtdmlld1xcc2Vzc2lvbi1hc3NpZ25tZW50LXZpZXcucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9zZXNzaW9uLWFzc2lnbm1lbnQtdmlldy9zZXNzaW9uLWFzc2lnbm1lbnQtdmlldy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQ0NKOztBRENFO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FDRUo7O0FEQUk7RUFDRSxxQkFBQTtBQ0VOOztBRENFO0VBQ0UsWUFBQTtFQUNBLFlBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Nlc3Npb24tYXNzaWdubWVudC12aWV3L3Nlc3Npb24tYXNzaWdubWVudC12aWV3LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXJ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIC5zY3JvbGxpbmctd3JhcHBlciB7XHJcbiAgICBvdmVyZmxvdy14OiBzY3JvbGw7XHJcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIFxyXG4gICAgLmNhcmQge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGlvbi1pdGVtIHtcclxuICAgIGJvcmRlcjpub25lO1xyXG4gICAgcGFkZGluZzogMGVtO1xyXG4gIH0iLCIuY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2Nyb2xsaW5nLXdyYXBwZXIge1xuICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5zY3JvbGxpbmctd3JhcHBlciAuY2FyZCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuaW9uLWl0ZW0ge1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDBlbTtcbn0iXX0= */\";","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AssignmentsService } from '../../services/assignments.service';\r\nimport { ModalController, Platform } from '@ionic/angular';\r\nimport { SessionAssignmentChatPage } from '../../pages/session-assignment-chat/session-assignment-chat.page';\r\nimport { Storage } from '@ionic/storage';\r\nimport { NetworkService } from '../../services/network.service';\r\nimport { apiurl, SessionStatus } from '../../model/global-api';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { GlobalService } from '../../services/global.service';\r\nimport { SessionViewImageDiscussionPage } from '../shared-module/session-view-image-discussion/session-view-image-discussion.page';\r\nimport { SessionMyPage } from '../session-my/session-my.page';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { HTTP } from '@ionic-native/http/ngx';\r\nimport { TestBed } from '@angular/core/testing';\r\n@Component({\r\n  selector: 'app-session-assignment-view',\r\n  templateUrl: './session-assignment-view.page.html',\r\n  styleUrls: ['./session-assignment-view.page.scss'],\r\n})\r\nexport class SessionAssignmentViewPage implements OnInit {\r\n  textdisplay: any;\r\n  assignlist: any;\r\n  ChangeDetectorRef: any;\r\n  test: any;\r\n  test2: any;\r\n  refreshvalue: boolean = false;\r\n  test3: any;\r\n\r\n  constructor(private ngZone: NgZone, private nativeHttp: HTTP, private globalService: GlobalService, private platform: Platform, private sessionmypage: SessionMyPage, public dms: DomSanitizer, private router: Router, private activatedRoute: ActivatedRoute, private modalController: ModalController, private assignmentsService: AssignmentsService, private storage: Storage, private networkService: NetworkService) { }\r\n\r\n  //Segment\r\n  segmentModel = \"assignment\"; isactiveassignment: string; isactivevideoorvoice: string; isactiveanalysis: string; asgmtid: any; sessionid: any;\r\n  //User Info\r\n  token: any; studentid: any; tutornamefordisplay: any;\r\n  asgmtlist: any; sessionstatusended: any; sessionstatus: any; imgdisplayinapp: any; asgmtdiscusslist: any; discussimgdisplayinapp: any;\r\n  ngOnInit() {\r\n    //Segment\r\n    console.log('this.router.url', 'this.rout')\r\n    this.isactiveassignment = \"activesegment\";\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.token = this.globalService.getselectedtoken()\r\n    this.studentid = this.globalService.getselectedStudentId()\r\n    this.getAssignmentList();\r\n    this.tutornamefordisplay = this.assignmentsService.getselectedtutorname()\r\n  }\r\n  ionViewDidEnter() {\r\n\r\n    this.platform.backButton.subscribeWithPriority(10, () => {\r\n      this.router.navigateByUrl('tabs/session-view/session-view/' + this.sessionid)\r\n    });\r\n  }\r\n\r\n  /*Get AssignmentList*/\r\n\r\n\r\n\r\n  getAssignmentList() {\r\n    this.sessionstatusended = SessionStatus.SESSION_STATUS_ENDED;\r\n    // Get the ID that was passed with the URL\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      let id = params.getAll('id')\r\n      this.sessionid = id;\r\n    })\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      let asgmtid = params.getAll('asgmtid')\r\n      this.asgmtid = asgmtid;\r\n    })\r\n\r\n    this.sessionstatus = this.assignmentsService.getselectedsessionstatus();\r\n    this.storage.get('assignmentdetails').then((val) => {\r\n      val.forEach((valor) => {\r\n        if (this.asgmtid == valor.asgmt_Id) {\r\n          this.asgmtlist = valor;\r\n          this.imgdisplayinapp = this.display(valor.asgmt_Data)\r\n          this.asgmtdiscusslist = this.asgmtlist.assignmentDiscussions;\r\n\r\n        }\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  async UpdateData(event) {\r\n    this.sessionstatusended = SessionStatus.SESSION_STATUS_ENDED;\r\n\r\n\r\n    this.token = this.globalService.getselectedtoken()\r\n    this.studentid = this.globalService.getselectedStudentId()\r\n    this.sessionstatus = this.assignmentsService.getselectedsessionstatus();\r\n\r\n    let header = { 'Accept': 'application/json', 'Content-Type': 'application/json' }\r\n    let fetchinfo = { \"Authentication_Token\": this.token, \"Student_Id\": this.studentid, \"inDepth\": \"Y\" }\r\n    this.nativeHttp.setDataSerializer('json');\r\n    this.nativeHttp.post(apiurl.apiUrl + 'session/mySessions', fetchinfo, header).then(response => {\r\n      try {\r\n        response.data = JSON.parse(response.data);//whole asgmtlist of particular session ,returns a promise\r\n        this.storage.set('AssignmentDiscussion', response.data).then(val => {\r\n          this.storage.get('AssignmentDiscussion').then((val) => {\r\n            // console.log('storage get',this.storage.get('AssignmentDiscussion'))\r\n            val.forEach((valor) => {\r\n              this.test = valor.assignments;\r\n              this.test.forEach(valor2 => {\r\n                this.test2 = valor2.asgmt_Id;\r\n                if (this.asgmtid == this.test2) {\r\n                  this.test = valor2.assignmentDiscussions;\r\n                  this.test3 = valor2\r\n                  console.log('this is the apilist', this.test.created_On)\r\n\r\n                  this.imgdisplayinapp = this.display(this.test3.asgmt_Data)\r\n                  this.asgmtdiscusslist = this.test;\r\n                }\r\n              });\r\n            })\r\n          })\r\n          event.target.complete();\r\n        })\r\n      }\r\n      catch (e) {\r\n        console.error('JSON parsing error');\r\n        this.assignmentsService.presentError()\r\n        setTimeout(() => {\r\n          event.target.complete()\r\n          this.router.navigateByUrl('tabs/main');\r\n\r\n        }, 3000);\r\n      }\r\n\r\n    }).catch(response => {\r\n      // prints 403\r\n      console.log(response.status, ' errorsss');\r\n      // prints Permission denied\r\n      console.log(response.error, ' error');\r\n      this.assignmentsService.presentError()\r\n      setTimeout(() => {\r\n        event.target.complete()\r\n        this.router.navigateByUrl('tabs/main');\r\n\r\n      }, 3000);\r\n    });\r\n\r\n  }\r\n\r\n  // refreshing(){\r\n  //   this.ngZone.run(() => {\r\n  //     this.refreshvalue = true;\r\n  //   })\r\n  // }\r\n\r\n\r\n  /*Segment */\r\n  segmentChanged(event) {\r\n    if (this.segmentModel == \"conferencing\") {\r\n      this.isactiveassignment = \"inactivesegment\";\r\n      this.isactivevideoorvoice = \"activesegment\";\r\n      this.isactiveanalysis = \"inactivesegment\";\r\n    }\r\n    else if (this.segmentModel == \"assignment\") {\r\n      this.isactiveassignment = \"activesegment\";\r\n      this.isactivevideoorvoice = \"inactivesegment\";\r\n      this.isactiveanalysis = \"inactivesegment\";\r\n    }\r\n    else if (this.segmentModel == \"analysis\") {\r\n      // console.log(\"analysis tab\")\r\n      this.isactiveassignment = \"inactivesegment\";\r\n      this.isactivevideoorvoice = \"inactivesegment\";\r\n      this.isactiveanalysis = \"activesegment\";\r\n    }\r\n  }\r\n  /*Chat Pop up*/\r\n  async presentModal(ev: any) {\r\n    const popover = await this.modalController.create({\r\n      component: SessionAssignmentChatPage,\r\n      cssClass: 'small-modal',\r\n      backdropDismiss: true\r\n    });\r\n    return await popover.present();\r\n  }\r\n  /*Edit Drawing*/\r\n  EditDrawing() {\r\n    if (this.networkService.online == false) {\r\n      this.networkService.presentNetworkMsg();\r\n    }\r\n    else {\r\n      this.assignmentsService.presentDrawing('Cancel', 'Confirm').then((res) => {\r\n        if (res === 'Confirm') {\r\n          this.router.navigateByUrl('/tabs/session-view/session-assignment-edit/' + this.sessionid + '/' + this.asgmtid);\r\n          //Drawing Page\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /*Open Chat*/\r\n  StayonPage(asgmtid) {\r\n    if (this.networkService.online == false) {\r\n      this.networkService.presentNetworkMsg();\r\n    }\r\n    else {\r\n      this.assignmentsService.setselectedasgmtid(asgmtid);\r\n      this.presentModal(event);\r\n    }\r\n  }\r\n  PreviousPage() {\r\n    if (this.networkService.online == false) {\r\n      this.networkService.presentNetworkMsg();\r\n    }\r\n    else {\r\n      this.router.navigateByUrl('/tabs/session-view/session-view/' + this.sessionid);\r\n    }\r\n  }\r\n  //Image Sanitize\r\n  display(bImg: string) {\r\n    return this.dms.bypassSecurityTrustResourceUrl(\"data:image/png;base64, \" + bImg)\r\n  }\r\n  //Display Image \r\n  async presentModalImage(imgdisplayinapp) {\r\n    const modal = await this.modalController.create({\r\n      component: SessionViewImageDiscussionPage,\r\n      componentProps: {\r\n        imagedisplay: this.imgdisplayinapp,\r\n        discussimgdisplayinapp: this.asgmtlist.asgmtDiscuss_Data\r\n      }\r\n    });\r\n    return await modal.present();\r\n  }\r\n  async presentModalDiscussImage(imgdisplayinapp) {\r\n    const modal = await this.modalController.create({\r\n      component: SessionViewImageDiscussionPage,\r\n      componentProps: {\r\n        imagedisplay: this.display(imgdisplayinapp),\r\n      }\r\n    });\r\n    return await modal.present();\r\n  }\r\n}"]}